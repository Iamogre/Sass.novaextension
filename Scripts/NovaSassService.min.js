class NovaSassService{constructor(){}get getArgs(){var cssStyle=nova.config.get("VineCode.NovaSass.cssStyle"),errorCss=nova.config.get("VineCode.NovaSass.errorCss"),sourceMap=nova.config.get("VineCode.NovaSass.sourceMap"),execPath=nova.config.get("VineCode.NovaSass.execPath");execPath||(execPath="sass");var options=[];return options.push(execPath),"Compressed"==cssStyle?options.push("--style=compressed"):options.push("--style=expanded"),"Yes"==errorCss?options.push("--error-css"):options.push("--no-error-css"),"Internal"==sourceMap?options.push("--embed-source-map"):"None"==sourceMap&&options.push("--no-source-map"),options}async compileSassUpdate(editor){var source=editor.document.path;if("scss"==source.slice(2+(source.lastIndexOf(".")-1>>>0))){var path=source.substr(0,source.lastIndexOf("/"));"scss"==path.substr(path.lastIndexOf("/")+1).toLowerCase()&&(path=path.substr(0,path.lastIndexOf("/")));var args=this.getArgs;args.push("--update"),args.push(path);var process=new Process("/usr/bin/env",{args:args}),stdOut=new Array;process.onStdout(function(line){stdOut.push(line.trim())});var stdErr=new Array;return process.onStderr(function(line){stdErr.push(line.trim())}),process.onDidExit(function(){if(stdErr.length>0){nova._notificationTimer&&clearTimeout(nova._notificationTimer);stdErr[0];stdErr.length>1&&stdErr[stdErr.length-1];let request=new NotificationRequest("sass-error");request.title=nova.localize("Sass Compile Error"),request.body=nova.localize(stdErr[0]+"\n"+stdErr[stdErr.length-1]),request.actions=[nova.localize("Dismiss")];nova.notifications.add(request);nova._notificationTimer=setTimeout(function(){nova.notifications.cancel("sass-error")},1e4)}else nova.notifications.cancel("sass-error")}),process.start(),!0}}}module.exports=NovaSassService;